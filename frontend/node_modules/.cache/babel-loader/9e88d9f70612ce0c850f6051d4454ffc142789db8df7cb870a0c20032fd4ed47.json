{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victus\\\\Desktop\\\\spreadsheet-clone\\\\frontend\\\\src\\\\components\\\\Spreadsheet.js\",\n  _s = $RefreshSig$();\n// src/components/Spreadsheet.js\nimport React, { useState } from 'react';\nimport Grid from './Grid';\nimport Toolbar from './Toolbar';\nimport FormulaBar from './FormulaBar';\nimport io from 'socket.io-client';\n\n// Connect to the Socket.io server\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Spreadsheet = () => {\n  _s();\n  const [activeCell, setActiveCell] = useState(null);\n  const [cellValue, setCellValue] = useState('');\n\n  // Handle cell value change\n  const handleCellChange = (row, col, value) => {\n    socket.emit('editCell', {\n      row,\n      col,\n      value\n    });\n  };\n\n  // Handle formula change from the formula bar\n  const handleFormulaChange = formula => {\n    if (activeCell) {\n      handleCellChange(activeCell.row, activeCell.col, formula);\n    }\n  };\n\n  // Handle receiving updated cell values from the server\n  socket.on('updateCell', data => {\n    // Update state for the changed cell\n    if (data.row === (activeCell === null || activeCell === void 0 ? void 0 : activeCell.row) && data.col === (activeCell === null || activeCell === void 0 ? void 0 : activeCell.col)) {\n      setCellValue(data.value);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      onUndo: () => console.log('Undo operation'),\n      onRedo: () => console.log('Redo operation')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormulaBar, {\n      activeCell: activeCell,\n      onFormulaChange: handleFormulaChange,\n      cellValue: cellValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      onCellChange: handleCellChange,\n      activeCell: activeCell,\n      setActiveCell: setActiveCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Spreadsheet, \"6UnbmGQHtDm3E3+qjrweMFoAe/c=\");\n_c = Spreadsheet;\nexport default Spreadsheet;\nvar _c;\n$RefreshReg$(_c, \"Spreadsheet\");","map":{"version":3,"names":["React","useState","Grid","Toolbar","FormulaBar","io","jsxDEV","_jsxDEV","socket","Spreadsheet","_s","activeCell","setActiveCell","cellValue","setCellValue","handleCellChange","row","col","value","emit","handleFormulaChange","formula","on","data","children","onUndo","console","log","onRedo","fileName","_jsxFileName","lineNumber","columnNumber","onFormulaChange","onCellChange","_c","$RefreshReg$"],"sources":["C:/Users/victus/Desktop/spreadsheet-clone/frontend/src/components/Spreadsheet.js"],"sourcesContent":["// src/components/Spreadsheet.js\r\nimport React, { useState } from 'react';\r\nimport Grid from './Grid';\r\nimport Toolbar from './Toolbar';\r\nimport FormulaBar from './FormulaBar';\r\nimport io from 'socket.io-client';\r\n\r\n// Connect to the Socket.io server\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Spreadsheet = () => {\r\n  const [activeCell, setActiveCell] = useState(null);\r\n  const [cellValue, setCellValue] = useState('');\r\n\r\n  // Handle cell value change\r\n  const handleCellChange = (row, col, value) => {\r\n    socket.emit('editCell', { row, col, value });\r\n  };\r\n\r\n  // Handle formula change from the formula bar\r\n  const handleFormulaChange = (formula) => {\r\n    if (activeCell) {\r\n      handleCellChange(activeCell.row, activeCell.col, formula);\r\n    }\r\n  };\r\n\r\n  // Handle receiving updated cell values from the server\r\n  socket.on('updateCell', (data) => {\r\n    // Update state for the changed cell\r\n    if (data.row === activeCell?.row && data.col === activeCell?.col) {\r\n      setCellValue(data.value);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar\r\n        onUndo={() => console.log('Undo operation')}\r\n        onRedo={() => console.log('Redo operation')}\r\n      />\r\n      <FormulaBar\r\n        activeCell={activeCell}\r\n        onFormulaChange={handleFormulaChange}\r\n        cellValue={cellValue}\r\n      />\r\n      <Grid onCellChange={handleCellChange} activeCell={activeCell} setActiveCell={setActiveCell} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spreadsheet;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,EAAE,MAAM,kBAAkB;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMI,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMc,gBAAgB,GAAGA,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,KAAK;IAC5CV,MAAM,CAACW,IAAI,CAAC,UAAU,EAAE;MAAEH,GAAG;MAAEC,GAAG;MAAEC;IAAM,CAAC,CAAC;EAC9C,CAAC;;EAED;EACA,MAAME,mBAAmB,GAAIC,OAAO,IAAK;IACvC,IAAIV,UAAU,EAAE;MACdI,gBAAgB,CAACJ,UAAU,CAACK,GAAG,EAAEL,UAAU,CAACM,GAAG,EAAEI,OAAO,CAAC;IAC3D;EACF,CAAC;;EAED;EACAb,MAAM,CAACc,EAAE,CAAC,YAAY,EAAGC,IAAI,IAAK;IAChC;IACA,IAAIA,IAAI,CAACP,GAAG,MAAKL,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,GAAG,KAAIO,IAAI,CAACN,GAAG,MAAKN,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEM,GAAG,GAAE;MAChEH,YAAY,CAACS,IAAI,CAACL,KAAK,CAAC;IAC1B;EACF,CAAC,CAAC;EAEF,oBACEX,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACJ,OAAO;MACNsB,MAAM,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAE;MAC5CC,MAAM,EAAEA,CAAA,KAAMF,OAAO,CAACC,GAAG,CAAC,gBAAgB;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFzB,OAAA,CAACH,UAAU;MACTO,UAAU,EAAEA,UAAW;MACvBsB,eAAe,EAAEb,mBAAoB;MACrCP,SAAS,EAAEA;IAAU;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACFzB,OAAA,CAACL,IAAI;MAACgC,YAAY,EAAEnB,gBAAiB;MAACJ,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3F,CAAC;AAEV,CAAC;AAACtB,EAAA,CAtCID,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAwCjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}