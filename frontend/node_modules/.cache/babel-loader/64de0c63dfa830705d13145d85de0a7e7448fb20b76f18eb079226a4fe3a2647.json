{"ast":null,"code":"// src/components/Spreadsheet.js\nimport React,{useState}from'react';import Grid from'./Grid';import Toolbar from'./Toolbar';import FormulaBar from'./FormulaBar';import io from'socket.io-client';// Connect to the Socket.io server\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io('http://localhost:5000');const Spreadsheet=()=>{const[activeCell,setActiveCell]=useState(null);const[cellValue,setCellValue]=useState('');// Handle cell value change\nconst handleCellChange=(row,col,value)=>{socket.emit('editCell',{row,col,value});};// Handle formula change from the formula bar\nconst handleFormulaChange=formula=>{if(activeCell){handleCellChange(activeCell.row,activeCell.col,formula);}};// Handle receiving updated cell values from the server\nsocket.on('updateCell',data=>{// Update state for the changed cell\nif(data.row===(activeCell===null||activeCell===void 0?void 0:activeCell.row)&&data.col===(activeCell===null||activeCell===void 0?void 0:activeCell.col)){setCellValue(data.value);}});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Toolbar,{onUndo:()=>console.log('Undo operation'),onRedo:()=>console.log('Redo operation')}),/*#__PURE__*/_jsx(FormulaBar,{activeCell:activeCell,onFormulaChange:handleFormulaChange,cellValue:cellValue}),/*#__PURE__*/_jsx(Grid,{onCellChange:handleCellChange,activeCell:activeCell,setActiveCell:setActiveCell})]});};export default Spreadsheet;","map":{"version":3,"names":["React","useState","Grid","Toolbar","FormulaBar","io","jsx","_jsx","jsxs","_jsxs","socket","Spreadsheet","activeCell","setActiveCell","cellValue","setCellValue","handleCellChange","row","col","value","emit","handleFormulaChange","formula","on","data","children","onUndo","console","log","onRedo","onFormulaChange","onCellChange"],"sources":["C:/Users/victus/Desktop/spreadsheet-clone/frontend/src/components/Spreadsheet.js"],"sourcesContent":["// src/components/Spreadsheet.js\r\nimport React, { useState } from 'react';\r\nimport Grid from './Grid';\r\nimport Toolbar from './Toolbar';\r\nimport FormulaBar from './FormulaBar';\r\nimport io from 'socket.io-client';\r\n\r\n// Connect to the Socket.io server\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Spreadsheet = () => {\r\n  const [activeCell, setActiveCell] = useState(null);\r\n  const [cellValue, setCellValue] = useState('');\r\n\r\n  // Handle cell value change\r\n  const handleCellChange = (row, col, value) => {\r\n    socket.emit('editCell', { row, col, value });\r\n  };\r\n\r\n  // Handle formula change from the formula bar\r\n  const handleFormulaChange = (formula) => {\r\n    if (activeCell) {\r\n      handleCellChange(activeCell.row, activeCell.col, formula);\r\n    }\r\n  };\r\n\r\n  // Handle receiving updated cell values from the server\r\n  socket.on('updateCell', (data) => {\r\n    // Update state for the changed cell\r\n    if (data.row === activeCell?.row && data.col === activeCell?.col) {\r\n      setCellValue(data.value);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar\r\n        onUndo={() => console.log('Undo operation')}\r\n        onRedo={() => console.log('Redo operation')}\r\n      />\r\n      <FormulaBar\r\n        activeCell={activeCell}\r\n        onFormulaChange={handleFormulaChange}\r\n        cellValue={cellValue}\r\n      />\r\n      <Grid onCellChange={handleCellChange} activeCell={activeCell} setActiveCell={setActiveCell} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spreadsheet;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,EAAE,KAAM,kBAAkB,CAEjC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,MAAM,CAAGL,EAAE,CAAC,uBAAuB,CAAC,CAE1C,KAAM,CAAAM,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAClD,KAAM,CAACa,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAE9C;AACA,KAAM,CAAAe,gBAAgB,CAAGA,CAACC,GAAG,CAAEC,GAAG,CAAEC,KAAK,GAAK,CAC5CT,MAAM,CAACU,IAAI,CAAC,UAAU,CAAE,CAAEH,GAAG,CAAEC,GAAG,CAAEC,KAAM,CAAC,CAAC,CAC9C,CAAC,CAED;AACA,KAAM,CAAAE,mBAAmB,CAAIC,OAAO,EAAK,CACvC,GAAIV,UAAU,CAAE,CACdI,gBAAgB,CAACJ,UAAU,CAACK,GAAG,CAAEL,UAAU,CAACM,GAAG,CAAEI,OAAO,CAAC,CAC3D,CACF,CAAC,CAED;AACAZ,MAAM,CAACa,EAAE,CAAC,YAAY,CAAGC,IAAI,EAAK,CAChC;AACA,GAAIA,IAAI,CAACP,GAAG,IAAKL,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAEK,GAAG,GAAIO,IAAI,CAACN,GAAG,IAAKN,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAEM,GAAG,EAAE,CAChEH,YAAY,CAACS,IAAI,CAACL,KAAK,CAAC,CAC1B,CACF,CAAC,CAAC,CAEF,mBACEV,KAAA,QAAAgB,QAAA,eACElB,IAAA,CAACJ,OAAO,EACNuB,MAAM,CAAEA,CAAA,GAAMC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAE,CAC5CC,MAAM,CAAEA,CAAA,GAAMF,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAE,CAC7C,CAAC,cACFrB,IAAA,CAACH,UAAU,EACTQ,UAAU,CAAEA,UAAW,CACvBkB,eAAe,CAAET,mBAAoB,CACrCP,SAAS,CAAEA,SAAU,CACtB,CAAC,cACFP,IAAA,CAACL,IAAI,EAAC6B,YAAY,CAAEf,gBAAiB,CAACJ,UAAU,CAAEA,UAAW,CAACC,aAAa,CAAEA,aAAc,CAAE,CAAC,EAC3F,CAAC,CAEV,CAAC,CAED,cAAe,CAAAF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}